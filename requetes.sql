---- CLUB ----
--------------


-- nom, localisation et numéro de club tous les clubs
SELECT *
FROM CLUB;
 
-- toutes les localisations des clubs
SELECT DISTINCT CLUB.LOCALISATION_CLUB
FROM CLUB;

-- toutes les noms des clubs
SELECT DISTINCT CLUB.NOM_CLUB
FROM CLUB;


---- RESPONSABLES ----
----------------------


-- responsables de chaque club
SELECT CLUB.NOM_CLUB, RESPONSABLE.NOM_RESPONSABLE, RESPONSABLE.PRENOM_RESPONSABLE, RESPONSABLE.FONCTION
FROM CLUB, RESPONSABLE
WHERE CLUB.NUMERO_CLUB = RESPONSABLE.NUMERO_CLUB

-- tous les responsables d'un club donné
SELECT CLUB.NOM_CLUB, RESPONSABLE.NOM_RESPONSABLE, RESPONSABLE.PRENOM_RESPONSABLE, RESPONSABLE.FONCTION
FROM CLUB, RESPONSABLE
WHERE CLUB.NUMERO_CLUB = RESPONSABLE.NUMERO_CLUB
AND CLUB.NUMERO_CLUB = 1;


---- EQUIPES ----
-----------------


-- selectionne toutes les équipes d'une catégorie donnée
SELECT CLUB.NOM_CLUB, EQUIPE.NUMERO_EQUIPE, EQUIPE.NOM_CATEGORIE
FROM CLUB, ENTRAINEUR, ANIMATION, ENTRAINE, EQUIPE
WHERE CLUB.NUMERO_CLUB = ANIMATION.NUMERO_CLUB
AND ENTRAINEUR.NUMERO_ENTRAINEUR = ANIMATION.NUMERO_ENTRAINEUR 
AND ENTRAINE.NUMERO_EQUIPE = EQUIPE.NUMERO_EQUIPE
AND ENTRAINE.NUMERO_ENTRAINEUR = ENTRAINEUR.NUMERO_ENTRAINEUR
AND EQUIPE.NOM_CATEGORIE = 'SENIOR'; 

-- selectionne les équipes de chaque club
SELECT CLUB.NUMERO_CLUB, CLUB.NOM_CLUB, EQUIPE.NUMERO_EQUIPE FROM CLUB, EQUIPE, ENTRAINEUR, ANIMATION, ENTRAINE
       WHERE CLUB.NUMERO_CLUB = ANIMATION.NUMERO_CLUB
       AND ENTRAINEUR.NUMERO_ENTRAINEUR = ANIMATION.NUMERO_ENTRAINEUR
       AND ENTRAINE.NUMERO_EQUIPE = EQUIPE.NUMERO_EQUIPE
       AND ENTRAINE.NUMERO_ENTRAINEUR = ENTRAINEUR.NUMERO_ENTRAINEUR
ORDER BY CLUB.NUMERO_CLUB ASC


---- JOUEURS ----
-----------------


-- sélection de tous les joueurs de la fédération
SELECT JOUEUR.*, ENTREE.DATE_ENTREE_JOUEUR
FROM JOUEUR, ENTREE
WHERE JOUEUR.NUMERO_LICENCE = ENTREE.NUMERO_LICENCE

-- sélection de tous les joueurs pour une catégorie donnée
SELECT JOUEUR.*, EQUIPE.NUMERO_EQUIPE
FROM JOUEUR, EQUIPE
WHERE JOUEUR.NUMERO_EQUIPE = EQUIPE.NUMERO_EQUIPE
AND EQUIPE.NOM_CATEGORIE = 'SENIOR'
ORDER BY JOUEUR.NUMERO_LICENCE ASC;

--sélection de tous les joueurs dans un club donné
SELECT CLUB.NOM_CLUB, JOUEUR.*, ENTREE.DATE_ENTREE_JOUEUR
FROM CLUB, JOUEUR, ENTREE
WHERE CLUB.NUMERO_CLUB = ENTREE.NUMERO_CLUB
AND JOUEUR.NUMERO_LICENCE = ENTREE.NUMERO_LICENCE
AND CLUB.NUMERO_CLUB = 1
ORDER BY JOUEUR.NUMERO_LICENCE ASC;

-- selection des joueurs qui participent à une rencontre donnée
SELECT DISTINCT JOUEUR.NOM_JOUEUR, JOUEUR.NUMERO_EQUIPE, RENCONTRE.NUMERO_RENCONTRE,  PARTICIPATION.FAUTES, PARTICIPATION.POINTS
FROM JOUEUR, EQUIPE, RENCONTRE, PARTICIPATION
WHERE JOUEUR.NUMERO_LICENCE = PARTICIPATION.NUMERO_LICENCE
AND RENCONTRE.NUMERO_RENCONTRE = PARTICIPATION.NUMERO_RENCONTRE
AND RENCONTRE.NUMERO_RENCONTRE = 1
ORDER BY PARTICIPATION.POINTS DESC;

-- selection des joueurs qui participent à une rencontre selon la date de la rencontre
SELECT DISTINCT JOUEUR.NOM_JOUEUR, JOUEUR.NUMERO_EQUIPE, RENCONTRE.NUMERO_RENCONTRE,  PARTICIPATION.FAUTES, PARTICIPATION.POINTS
FROM JOUEUR, EQUIPE, RENCONTRE, PARTICIPATION
WHERE JOUEUR.NUMERO_LICENCE = PARTICIPATION.NUMERO_LICENCE
AND RENCONTRE.NUMERO_RENCONTRE = PARTICIPATION.NUMERO_RENCONTRE
AND RENCONTRE.DATE_RENCONTRE = '2014-01-10'
ORDER BY JOUEUR.NUMERO_EQUIPE ASC;


---- CONSULTATIONS DIVERSES ----
--------------------------------


-- score des matchs joués à une daté donnée
SELECT RENCONTRE.DATE_RENCONTRE, RENCONTRE.NUMERO_RENCONTRE, RENCONTRE.NUMERO_EQUIPE_JOUE_DOMICILE, RENCONTRE.SCORE_EQUIPE_DOMICILE, RENCONTRE.SCORE_EQUIPE_EXTERIEUR, RENCONTRE.NUMERO_EQUIPE_JOUE_EXTERIEUR
FROM RENCONTRE
WHERE RENCONTRE.DATE_RENCONTRE = '2014-01-10'
ORDER BY RENCONTRE.NUMERO_RENCONTRE ASC;

-- liste des joueurs de la fédération  à une date donnée
SELECT JOUEUR.*, ENTREE.DATE_ENTREE_JOUEUR
FROM JOUEUR, ENTREE
WHERE JOUEUR.NUMERO_LICENCE = ENTREE.NUMERO_LICENCE
AND ENTREE.DATE_ENTREE_JOUEUR < '2012-01-01';
ORDER BY JOUEUR.NUMERO_LICENCE

-- stats des joueurs à une date donnée ("feuille de match")
SELECT RENCONTRE.DATE_RENCONTRE, RENCONTRE.NUMERO_RENCONTRE, JOUEUR.PRENOM_JOUEUR, JOUEUR.NOM_JOUEUR, PARTICIPATION.POINTS, PARTICIPATION.FAUTES
FROM RENCONTRE, PARTICIPATION, JOUEUR
WHERE RENCONTRE.DATE_RENCONTRE = '2014-01-10'
AND RENCONTRE.NUMERO_RENCONTRE = PARTICIPATION.NUMERO_RENCONTRE
AND JOUEUR.NUMERO_LICENCE = PARTICIPATION.NUMERO_LICENCE
ORDER BY RENCONTRE.NUMERO_RENCONTRE ASC, PARTICIPATION.POINTS DESC, PARTICIPATION.FAUTES ASC;

-- nombre de victoire, nuls, défaites par équipe pour un club donné, ici le CLUB numéro 3
-- faire varier le numéro de club à la fin de la requêtes.
select VIC.NUMERO_EQUIPE, VIC.NOMBRE_VICTOIRES, NUL.NOMBRE_NULS, DEF.NOMBRE_DEFAITES, NOM_CLUB
FROM (select RTR_L.NUMERO_EQUIPE, ifnull(NB_VICTOIRE_DOMICILE,0)+ifnull(NB_VICTOIRE_EXTERIEUR,0) as NOMBRE_VICTOIRES
from (select NUMERO_EQUIPE, COUNT(RENCONTRE.NUMERO_RENCONTRE) AS NB_VICTOIRE_DOMICILE
    from EQUIPE
    left join RENCONTRE
    on RENCONTRE.NUMERO_EQUIPE_JOUE_DOMICILE = EQUIPE.NUMERO_EQUIPE
    and SCORE_EQUIPE_DOMICILE > SCORE_EQUIPE_EXTERIEUR
    group by NUMERO_EQUIPE) as RTR_L
left join (select NUMERO_EQUIPE_JOUE_EXTERIEUR AS NUMERO_EQUIPE, COUNT(NUMERO_RENCONTRE) AS NB_VICTOIRE_EXTERIEUR
    from RENCONTRE
    where SCORE_EQUIPE_DOMICILE < SCORE_EQUIPE_EXTERIEUR
    group by NUMERO_EQUIPE_JOUE_EXTERIEUR) as RTR_R
on RTR_L.NUMERO_EQUIPE = RTR_R.NUMERO_EQUIPE) AS VIC,
(select RTR_L.NUMERO_EQUIPE, ifnull(NB_NUL_DOMICILE,0)+ifnull(NB_NUL_EXTERIEUR,0) as NOMBRE_NULS,  ifnull(NB_NUL_DOMICILE,0)+ifnull(NB_NUL_EXTERIEUR,0) as PTS_NUL
     from (select NUMERO_EQUIPE, COUNT(RENCONTRE.NUMERO_RENCONTRE) AS NB_NUL_DOMICILE
     from EQUIPE
     left join RENCONTRE
     on RENCONTRE.NUMERO_EQUIPE_JOUE_DOMICILE = EQUIPE.NUMERO_EQUIPE
     and SCORE_EQUIPE_DOMICILE = SCORE_EQUIPE_EXTERIEUR
     group by NUMERO_EQUIPE) as RTR_L
     left join (select NUMERO_EQUIPE_JOUE_EXTERIEUR AS NUMERO_EQUIPE, COUNT(NUMERO_RENCONTRE) AS NB_NUL_EXTERIEUR
    from RENCONTRE
    where SCORE_EQUIPE_DOMICILE = SCORE_EQUIPE_EXTERIEUR
    group by NUMERO_EQUIPE_JOUE_EXTERIEUR) as RTR_R
on RTR_L.NUMERO_EQUIPE = RTR_R.NUMERO_EQUIPE
    group by NUMERO_EQUIPE) as NUL
,
     (select RTR_L.NUMERO_EQUIPE, ifnull(NB_DEFAITE_DOMICILE,0)+ifnull(NB_DEFAITE_EXTERIEUR,0) as NOMBRE_DEFAITES
     from (select NUMERO_EQUIPE, COUNT(RENCONTRE.NUMERO_RENCONTRE) AS NB_DEFAITE_DOMICILE
     from EQUIPE
     left join RENCONTRE
     on RENCONTRE.NUMERO_EQUIPE_JOUE_DOMICILE = EQUIPE.NUMERO_EQUIPE
     and SCORE_EQUIPE_DOMICILE < SCORE_EQUIPE_EXTERIEUR
     group by NUMERO_EQUIPE) as RTR_L
     left join (select NUMERO_EQUIPE_JOUE_EXTERIEUR AS NUMERO_EQUIPE, COUNT(NUMERO_RENCONTRE) AS NB_DEFAITE_EXTERIEUR
    from RENCONTRE
    where SCORE_EQUIPE_DOMICILE > SCORE_EQUIPE_EXTERIEUR
    group by NUMERO_EQUIPE_JOUE_EXTERIEUR) as RTR_R
on RTR_L.NUMERO_EQUIPE = RTR_R.NUMERO_EQUIPE
    group by NUMERO_EQUIPE) as DEF, CLUB, ENTRAINEUR, ENTRAINE, ANIMATION
WHERE VIC.NUMERO_EQUIPE = ENTRAINE.NUMERO_EQUIPE
AND VIC.NUMERO_EQUIPE = NUL.NUMERO_EQUIPE
AND NUL.NUMERO_EQUIPE = DEF.NUMERO_EQUIPE
AND ENTRAINE.NUMERO_ENTRAINEUR = ENTRAINEUR.NUMERO_ENTRAINEUR
AND ANIMATION.NUMERO_ENTRAINEUR = ENTRAINEUR.NUMERO_ENTRAINEUR
AND ANIMATION.NUMERO_CLUB = CLUB.NUMERO_CLUB
AND CLUB.NUMERO_CLUB = 3


---- STATISTIQUES ----
----------------------


--  moyenne points marqués par rencontre à une date donnée
select SUM(POINTS_MARQUES_RENCONTRE)/
       (select COUNT(DATE_RENCONTRE) from RENCONTRE
                   where DATE_RENCONTRE = '2014-01-10')
as 'MOYENNE POINTS MARQUES', DATE_RENCONTRE from
   (select DATE_RENCONTRE, NUMERO_RENCONTRE, SCORE_EQUIPE_DOMICILE+SCORE_EQUIPE_EXTERIEUR AS POINTS_MARQUES_RENCONTRE from RENCONTRE) as TAB
group by DATE_RENCONTRE

--Moyenne des points marqués (par rencontre) depuis le début de la saison
select SUM(POINTS_MARQUES_RENCONTRE)/
       (select count(NUMERO_JOURNEE) from RENCONTRE
       	        where NUMERO_JOURNEE >= 1) 
as MOYENNE_POINTS_MARQUES from 
   (select NUMERO_JOURNEE, NUMERO_RENCONTRE, SCORE_EQUIPE_DOMICILE+SCORE_EQUIPE_EXTERIEUR as POINTS_MARQUES_RENCONTRE from RENCONTRE where NUMERO_JOURNEE >= 1) as TAB

--MeilleurS joueurs d'une journée, ici 1, (pour une catégorie, ici SENIOR)
select distinct NOM_JOUEUR, PRENOM_JOUEUR, PARTICIPATION.NUMERO_LICENCE, POINTS, FAUTES
       from PARTICIPATION, JOUEUR, RENCONTRE, EQUIPE
               where JOUEUR.NUMERO_LICENCE = PARTICIPATION.NUMERO_LICENCE
        and RENCONTRE.NUMERO_RENCONTRE = PARTICIPATION.NUMERO_RENCONTRE
        and (JOUEUR.NUMERO_EQUIPE = NUMERO_EQUIPE_JOUE_DOMICILE OR
            JOUEUR.NUMERO_EQUIPE = NUMERO_EQUIPE_JOUE_EXTERIEUR)
        and (EQUIPE.NUMERO_EQUIPE = NUMERO_EQUIPE_JOUE_DOMICILE OR
             EQUIPE.NUMERO_EQUIPE = NUMERO_EQUIPE_JOUE_EXTERIEUR)
        and EQUIPE.NOM_CATEGORIE = 'SENIOR'
        and NUMERO_JOURNEE = 1
group by NOM_JOUEUR
order by POINTS desc, FAUTES asc

--Meilleur joueur d'une journée, ici 1, pour une catégorie, ici SENIOR
select distinct NOM_JOUEUR, PRENOM_JOUEUR, PARTICIPATION.NUMERO_LICENCE, max(POINTS) as POINTS_MEILLEUR_JOUEUR, FAUTES
       from PARTICIPATION, JOUEUR, RENCONTRE, EQUIPE
               where JOUEUR.NUMERO_LICENCE = PARTICIPATION.NUMERO_LICENCE
        and RENCONTRE.NUMERO_RENCONTRE = PARTICIPATION.NUMERO_RENCONTRE
        and (JOUEUR.NUMERO_EQUIPE = NUMERO_EQUIPE_JOUE_DOMICILE OR
            JOUEUR.NUMERO_EQUIPE = NUMERO_EQUIPE_JOUE_EXTERIEUR)
        and (EQUIPE.NUMERO_EQUIPE = NUMERO_EQUIPE_JOUE_DOMICILE OR
             EQUIPE.NUMERO_EQUIPE = NUMERO_EQUIPE_JOUE_EXTERIEUR)
        and EQUIPE.NOM_CATEGORIE = 'SENIOR'
        and NUMERO_JOURNEE = 1
order by POINTS desc, FAUTES asc


---- CLASSEMENT GENERAL, avec contrainte de catégorie (sans contraine -> enlever la condition EQUIPE.NOM_CATEGORIE = 'SENIOR') ----
----------------------------


select VIC.NUMERO_EQUIPE, NOMBRE_VICTOIRES, NOMBRE_NULS, NOMBRE_DEFAITES, PTS_VIC+PTS_NUL as POINTS, ifnull(DIFF_VICTOIRE,0)+ifnull(DIFF_DEFAITE,0) as GOALAVERAGE
from(select RTR_L.NUMERO_EQUIPE, ifnull(NB_VICTOIRE_DOMICILE,0)+ifnull(NB_VICTOIRE_EXTERIEUR,0) as NOMBRE_VICTOIRES, (ifnull(NB_VICTOIRE_DOMICILE,0)+ifnull(NB_VICTOIRE_EXTERIEUR,0))*3 as PTS_VIC,  ifnull(DIFF_VICTOIRE_DOMICILE,0)+ifnull(DIFF_VICTOIRE_EXTERIEUR,0) AS DIFF_VICTOIRE
        from(select NUMERO_EQUIPE, COUNT(NUMERO_RENCONTRE) AS NB_VICTOIRE_DOMICILE, SCORE_EQUIPE_DOMICILE-SCORE_EQUIPE_EXTERIEUR AS DIFF_VICTOIRE_DOMICILE
            from EQUIPE
            left join RENCONTRE
            on RENCONTRE.NUMERO_EQUIPE_JOUE_DOMICILE = EQUIPE.NUMERO_EQUIPE
            and SCORE_EQUIPE_DOMICILE > SCORE_EQUIPE_EXTERIEUR
           group by NUMERO_EQUIPE) as RTR_L
    left join (
              select NUMERO_EQUIPE_JOUE_EXTERIEUR AS NUMERO_EQUIPE, COUNT(NUMERO_RENCONTRE) AS NB_VICTOIRE_EXTERIEUR, SCORE_EQUIPE_EXTERIEUR-SCORE_EQUIPE_DOMICILE AS DIFF_VICTOIRE_EXTERIEUR
          from RENCONTRE
        where SCORE_EQUIPE_DOMICILE < SCORE_EQUIPE_EXTERIEUR
            group by NUMERO_EQUIPE_JOUE_EXTERIEUR) as RTR_R
        on RTR_L.NUMERO_EQUIPE = RTR_R.NUMERO_EQUIPE
        group by NUMERO_EQUIPE) as VIC
,
    (select RTR_L.NUMERO_EQUIPE, ifnull(NB_NUL_DOMICILE,0)+ifnull(NB_NUL_EXTERIEUR,0) as NOMBRE_NULS,  ifnull(NB_NUL_DOMICILE,0)+ifnull(NB_NUL_EXTERIEUR,0) as PTS_NUL
     from (select NUMERO_EQUIPE, COUNT(RENCONTRE.NUMERO_RENCONTRE) AS NB_NUL_DOMICILE
     from EQUIPE
     left join RENCONTRE
     on RENCONTRE.NUMERO_EQUIPE_JOUE_DOMICILE = EQUIPE.NUMERO_EQUIPE
     and SCORE_EQUIPE_DOMICILE = SCORE_EQUIPE_EXTERIEUR
     group by NUMERO_EQUIPE) as RTR_L
     left join (select NUMERO_EQUIPE_JOUE_EXTERIEUR AS NUMERO_EQUIPE, COUNT(NUMERO_RENCONTRE) AS NB_NUL_EXTERIEUR
    from RENCONTRE
    where SCORE_EQUIPE_DOMICILE = SCORE_EQUIPE_EXTERIEUR
    group by NUMERO_EQUIPE_JOUE_EXTERIEUR) as RTR_R
on RTR_L.NUMERO_EQUIPE = RTR_R.NUMERO_EQUIPE
    group by NUMERO_EQUIPE) as NUL
,
     (select RTR_L.NUMERO_EQUIPE, ifnull(NB_DEFAITE_DOMICILE,0)+ifnull(NB_DEFAITE_EXTERIEUR,0) as NOMBRE_DEFAITES, ifnull(DIFF_DEFAITE_DOMICILE,0)+ifnull(DIFF_DEFAITE_EXTERIEUR,0) AS DIFF_DEFAITE
     from (select NUMERO_EQUIPE, COUNT(RENCONTRE.NUMERO_RENCONTRE) AS NB_DEFAITE_DOMICILE, SCORE_EQUIPE_DOMICILE-SCORE_EQUIPE_EXTERIEUR AS DIFF_DEFAITE_DOMICILE
     from EQUIPE
     left join RENCONTRE
     on RENCONTRE.NUMERO_EQUIPE_JOUE_DOMICILE = EQUIPE.NUMERO_EQUIPE
     and SCORE_EQUIPE_DOMICILE < SCORE_EQUIPE_EXTERIEUR
     group by NUMERO_EQUIPE) as RTR_L
     left join (select NUMERO_EQUIPE_JOUE_EXTERIEUR AS NUMERO_EQUIPE, COUNT(NUMERO_RENCONTRE) AS NB_DEFAITE_EXTERIEUR, SCORE_EQUIPE_EXTERIEUR-SCORE_EQUIPE_DOMICILE AS DIFF_DEFAITE_EXTERIEUR
    from RENCONTRE
    where SCORE_EQUIPE_DOMICILE > SCORE_EQUIPE_EXTERIEUR
    group by NUMERO_EQUIPE_JOUE_EXTERIEUR) as RTR_R
on RTR_L.NUMERO_EQUIPE = RTR_R.NUMERO_EQUIPE
    group by NUMERO_EQUIPE) as DEF, EQUIPE

where DEF.NUMERO_EQUIPE = VIC.NUMERO_EQUIPE
and NUL.NUMERO_EQUIPE = VIC.NUMERO_EQUIPE
and EQUIPE.NOM_CATEGORIE = 'SENIOR'
order by POINTS desc, GOALAVERAGE desc

